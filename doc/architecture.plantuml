@startuml

package random3dmaze {

  package model {

    class field_factory <<(F, red)>> {
      create() : field
    }

    class field <<(V, orchid)>> {
      width() : unsigned int
      height() : unsigned int
      point_of_start() : point
      point_of_goal() : point
      has_wall_at(point : point) : bool
    }

    class point <<(V, orchid)>> {
      {static} from_xy(x : int, y : int) : point
      x() : int
      y() : int
    }

    class direction <<(V, orchid)>> {
      {static} north() : direction
      {static} south() : direction
      {static} west() : direction
      {static} east() : direction

      left() : direction
      right() : direction
      back() : direction

      front_of(point : point) : point
      back_of(point : point) : point
      left_of(point : point) : point
      right_of(point : point) : point
    }

    interface player_observer {
      sight_changed() : void
      reached_goal() : void
      gave_up() : void
    }

    class player {
      point() : point
      direction() : direction
      go_forward() : void
      turn_left() : void
      turn_right() : void
      turn_backward() : void

      register_observer(observer : player_observer) : void
      unregister_observer(observer : player_observer) : void
    }

    field_factory ..> field
    field ..> point
    player o-- field
    player o-- point
    player o-- direction
    player o-- player_observer
    direction ..> point
  }

  package ui

  ui ..> field_factory
  ui o-- player
  ui ..|> player_observer
  ui o-- field
}

@enduml
